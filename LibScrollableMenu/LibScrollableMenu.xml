<GuiXml>
	<Controls>
		<!-- Munge template -->
			<!--Controls>
				<Texture name="$(parent)MungeOverlay" textureFile="EsoUI/Art/Tooltips/munge_overlay.dds" layer="CONTROLS" level="1" addressMode="WRAP" hidden="false">
					<Anchor point="TOPLEFT" offsetY="1" />
					<Anchor point="BOTTOMRIGHT" offsetY="-2" />
				</Texture>
			</Controls-->
			
		<!-- Highlight for ZO_SortFilterList entries where a submenu got a callback function - Light green
			Normal highlight is ZO_SelectionHighlight  -light blue -->
		<Backdrop name="LibScrollableMenu_Highlight_Green" inherits="ZO_SelectionHighlight" virtual="true" blendMode="ADD" centerColor="00ff00" edgeColor="00ff00"/>
		
		<!-- Base row template with Multi-Icon -->
		<Control name="LibScrollableMenu_IconEntry_Template" virtual="true">
			<Anchor point="LEFT" offsetX="8" offsetY="0" />
			<Dimensions y="6" />
			<Controls>
				<Control name="$(parent)IconContainer">
					<Dimensions x="25"  y="25"/>
					<Anchor point="TOPLEFT" offsetX="0" offsetY="0"/>
					<Anchor point="BOTTOMLEFT" offsetY="0" />
					<Controls>
						<Texture name="$(parent)Icon" inherits="ZO_MultiIcon">
							<!--Dimensions x="25"  y="25"/>
							<Anchor point="CENTER"/-->
							
							<Anchor point="TOPLEFT"/>
							<Anchor point="BOTTOMRIGHT"/>
							
							<OnMouseEnter name="ZO_PropagateMouseOverBehavior">
								ZO_PropagateHandlerToNearestAncestor("OnMouseEnter", ...)
							</OnMouseEnter>

							<OnMouseExit name="ZO_PropagateMouseOverBehavior">
								ZO_PropagateHandlerToNearestAncestor("OnMouseExit", ...)
							</OnMouseExit>
						</Texture>
					</Controls>
				</Control>
			</Controls>
		</Control>

		<Control name="LibScrollableMenu_ComboBoxEntry_Behavior" inherits="LibScrollableMenu_IconEntry_Template" level="3" mouseEnabled="true" virtual="true">
			<OnMouseEnter> <!-- name="BaseHandler"-->
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnMouseEnterEntry(self)
				end
			</OnMouseEnter>
			
			<OnMouseExit>
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnMouseExitEntry(self)
				end
			</OnMouseExit>
			
			<OnMouseUp>
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnEntrySelected(self, button, upInside)
				end
			</OnMouseUp>
		</Control>

		<!-- Row templates -->
		<!-- Divider | no icon no handlers -->
		<Control name="LibScrollableMenu_ComboBoxDividerEntry" virtual="true">
			<Dimensions y="6" />
			<Controls>
				<Texture name="$(parent)Divider" hidden="false" inherits="ZO_BaseTooltipDivider">
					<Anchor point="LEFT" offsetX="-0" offsetY="-2.5" />
					<Anchor point="RIGHT" offsetX="0" offsetY="2.5" />
				</Texture>
			</Controls>
		</Control>

		<!-- Header | no handlers-->
		<Control name="LibScrollableMenu_ComboBoxHeaderEntry" inherits="LibScrollableMenu_ComboBoxEntry_Behavior" mouseEnabled="true" virtual="true">
			<Dimensions y="25" />
			<OnInitialized>
				self.isHeader = true
			</OnInitialized>

			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" font="ZoFontWinH5" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_CONTEXT_HIGHLIGHT" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="0" />
					<Anchor point="BOTTOMRIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" offsetY="-5"  />
				</Label>
				<!-- ZoFontWinH5 inherits="ZO_HorizontalDivider" inherits="ZO_WideHorizontalDivider" offsetY="4" -->
				<Texture name="$(parent)Divider" inherits="ZO_Options_Divider">
					<Anchor point="BOTTOMLEFT" offsetX="3" offsetY="-5"/>
					<Anchor point="BOTTOMRIGHT" offsetX="0" offsetY="0" />
				</Texture>
			</Controls>
		</Control>

		<!-- Normal entry -->
		<Control name="LibScrollableMenu_ComboBoxEntry" inherits="LibScrollableMenu_ComboBoxEntry_Behavior" mouseEnabled="true" virtual="true">
			<Dimensions y="ZO_COMBO_BOX_ENTRY_TEMPLATE_HEIGHT" />
			<OnInitialized>
				<!-- Is this still needed? -->
				self.selectable = true <!-- Denotes this is a selectable entry.   -->
			</OnInitialized>

			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="1" />
					<Anchor point="RIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" />
				</Label>
			</Controls>
		</Control>

		<!-- Checkbox -->
		<Control name="LibScrollableMenu_ComboBoxCheckboxEntry" inherits="LibScrollableMenu_ComboBoxEntry" mouseEnabled="true" virtual="true">
			<Dimensions y="25" />

			<OnInitialized>
				self.Checkbox = self:GetNamedChild('Checkbox')
			</OnInitialized>
			
			<Controls>
				<Button name="$(parent)Checkbox" inherits="ZO_CheckButton" level="2">
					<!-- Centered on the icon -->
					<OnMouseEnter name="ZO_PropagateMouseOverBehavior">
						ZO_PropagateHandlerToNearestAncestor("OnMouseEnter", ...)
					</OnMouseEnter>

					<OnMouseExit name="ZO_PropagateMouseOverBehavior">
						ZO_PropagateHandlerToNearestAncestor("OnMouseExit", ...)
					</OnMouseExit>
					<Anchor point="LEFT" relativeTo="$(parent)IconContainer" relativePoint="RIGHT" offsetX="1"/>
				</Button>
				<Label name="$(parent)Label" verticalAlignment="CENTER" override="true" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="LEFT" relativeTo="$(parent)Checkbox" relativePoint="RIGHT" offsetX="4"/>
					<Anchor point="RIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" />
				</Label>
			</Controls>
		</Control>

		<!-- Submenu -->
		<Control name="LibScrollableMenu_ComboBoxSubmenuEntry" inherits="LibScrollableMenu_ComboBoxEntry" mouseEnabled="true" virtual="true">
			<OnInitialized>
				<!-- Is this still needed? -->
				self.selectable = true <!-- Denotes this is a selectable entry.   -->
			</OnInitialized>
			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" override="true" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="1" />
					<Anchor point="RIGHT" offsetX="-25" />
				</Label>
				<Texture name="$(parent)Arrow" textureFile="EsoUI/Art/Miscellaneous/colorPicker_slider_vertical.dds">
					<TextureCoords left="0" right="0.5" top="0" bottom="1"/>
					<Dimensions x="16"  y="20"/>
					<Anchor point="LEFT" relativeTo="$(parent)Label" relativePoint="RIGHT" offsetY="1"/>
				</Texture>
			</Controls>
		</Control>

		<!-- The genuine Dropdown control. The scroll list container.
			TLC so it can be forced above other dropdowns without having to consider layering
			Since some UI panels have layering set, we set it as overlay high, so it will be above those
			We give Scroll an offsetX to allow detection of on enter/exit. Otherwise, that detection is only done per rows
		-->
		<!-- The template used for initializing all dropdowns -->
		<TopLevelControl name="LibScrollableMenu_Dropdown_Behavior" virtual="true">
			<OnEffectivelyShown name="BringToTop">
				self:BringWindowToTop()
			</OnEffectivelyShown>

			<OnEffectivelyHidden name="HideDropdown" >
				-- Handler set normally in ZO_ComboBox:Initialize
				if self.object then
					self.object:HideDropdown()
				end
			</OnEffectivelyHidden>
	
			<OnMouseEnter name="CloseCheck">
				-- Do we need to close any submenus on dropdown enter?
				if self.object then
					self.object:OnMouseExitTimeout(self)
				end
			</OnMouseEnter>
			
			<OnShow name="Narrate">
				if self.object then
					self.object:OnShow(self.object:GetFormattedNarrateEvent('Show'))
				end
			</OnShow>
			
			<OnHide name="Narrate">
				if self.object then
					self.object:OnHide(self.object:GetFormattedNarrateEvent('Hide'))
				end
			</OnHide>
		</TopLevelControl>
		
		<TopLevelControl name="LibScrollableMenu_Dropdown_Template" inherits="ZO_ComboBoxDropdown_Keyboard_Template LibScrollableMenu_Dropdown_Behavior" virtual="true">
			<OnInitialized>
				-- Overwritten to prevent original OnInitialized
			</OnInitialized>
			<Controls>
				<Control name="$(parent)Scroll" override="true">
					<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
					<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT" offsetX="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
				</Control>
			</Controls>
		</TopLevelControl>
		
		<TopLevelControl name="LibScrollableMenu_Dropdown_Template_WithHeader" inherits="LibScrollableMenu_Dropdown_Behavior" virtual="true">
			<OnInitialized>
			</OnInitialized>
			<Controls>
				<Control name="$(parent)Header" hidden="true">
					<OnInitialized>
						local headerControls = LibScrollableMenu.headerControls
						local titleContainer = self:GetNamedChild("TitleContainer")
						self.controls = {
							[headerControls.PARENT] = self,
							[headerControls.TITLE] = titleContainer:GetNamedChild("Title"),
							[headerControls.SUBTITLE] = titleContainer:GetNamedChild("SubTitle"),
							[headerControls.CENTER_BASELINE] = self:GetNamedChild("CenterAnchor"),
							[headerControls.TITLE_BASELINE] = titleContainer,
							[headerControls.DIVIDER_SIMPLE] = self:GetNamedChild("DividerSimple"),
							[headerControls.FILTER_CONTAINER] = self:GetNamedChild("FilterContrainer"),
							[headerControls.CUSTOM_CONTROL] = self:GetNamedChild("CustomControl"),
						}
						self:GetParent().header = self
					</OnInitialized>
					
					<!-- These anchors set it to span from left to right -->
					<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="0" offsetY="0" />
					<Anchor point="TOPRIGHT" relativeTo="$(parent)" relativePoint="TOPRIGHT" offsetX="0" offsetY="0"/>

					<Controls>
						<!-- Provides an area that clearly shows the border of the header -->
						<Backdrop name="$(parent)BG">
							<AnchorFill />
							
							<Edge file="EsoUI/Art/Tooltips/UI-Border.dds" edgeFileWidth="128" edgeFileHeight="16" />
							<!--Center file="EsoUI/Art/Tooltips/UI-TooltipCenter.dds" /-->
							<Center file="" />
							<Insets left="16" top="16" right="-16" bottom="-16" />
							
							<OnInitialized>
								self:SetCenterColor(0, 0, 0, 0)
							</OnInitialized>
							
							<Controls>
								<Texture name="$(parent)MungeOverlay" textureFile="EsoUI/Art/Tooltips/munge_overlay.dds" addressMode="WRAP">
									<AnchorFill />
								</Texture>
							</Controls>
						</Backdrop>

						<!-- Used to anchor the first control to the header -->
						<Control name="$(parent)CenterAnchor" resizeToFitDescendents="true" hidden="true">
							<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="0" offsetY="0" />
							<Anchor point="TOPRIGHT" relativeTo="$(parent)" relativePoint="TOPRIGHT" offsetX="0" offsetY="0"/>
						</Control>
						<Control name="$(parent)TitleContainer" inherits="ZO_GamepadHeaderTitleAnchors">
							<Controls>
								<!--Label name="$(parent)Title" inherits="ZO_GamepadScreenHeaderTitleTextTemplate" excludeFromResizeToFitExtents="true" -->
								<Label name="$(parent)Title" excludeFromResizeToFitExtents="true" >
									<Anchor point="BOTTOMLEFT" />
									<Anchor point="BOTTOMRIGHT" />
								</Label>
								<!--Label name="$(parent)SubTitle" inherits="ZO_GamepadHeaderLabelTextTemplate" horizontalAlignment="CENTER" excludeFromResizeToFitExtents="true" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED" hidden="true"-->
								<Label name="$(parent)SubTitle" horizontalAlignment="CENTER" excludeFromResizeToFitExtents="true" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED" hidden="true">
									<Anchor point="TOPLEFT" relativeTo="$(parent)Title" relativePoint="BOTTOMLEFT" offsetY="-10" />
									<Anchor point="TOPRIGHT" relativeTo="$(parent)Title" relativePoint="BOTTOMRIGHT" offsetY="-10" />
								</Label>
							</Controls>
						</Control>

						<!--This control fakes the area of where a divider would go so that content header is at least as tall as a header would normally be
							With a divider.  This ensures controls anchoring to the header begin where the Datas would be if there is no data -->
						<Control name="$(parent)DividerSimple" inherits="LibScrollableMenu_ComboBoxDividerEntry">
							<Dimensions y="0" />
							<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="BOTTOMLEFT" />
							<Anchor point="TOPRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT" offsetY="ZO_GAMEPAD_CONTENT_TITLE_DIVIDER_PADDING_Y" />
						</Control>
						
						<Control name="$(parent)FilterContrainer" resizeToFitDescendents="false" hidden="true">
							<Dimensions y="36" />
							<Controls>
								<Button name="$(parent)Reset" inherits="ZO_ButtonBehaviorClickSound">
									<Dimensions x="32" y="32" />
									<Anchor point="LEFT" relativeTo="$(parent)" relativePoint="LEFT" offsetX="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="0" />
							
									<Textures
										normal="EsoUI/Art/Help/help_tabIcon_feedback_up.dds"
										pressed="EsoUI/Art/Help/help_tabIcon_feedback_down.dds"
										mouseOver="EsoUI/Art/Help/help_tabIcon_feedback_over.dds"
									/>

									<OnMouseEnter>
										ZO_Tooltips_ShowTextTooltip(self, BOTTOM, GetString(SI_HOOK_POINT_STORE_RESET))
										InformationTooltipTopLevel:BringWindowToTop()
									</OnMouseEnter>

									<OnMouseExit>
										ZO_Tooltips_HideTextTooltip()
									</OnMouseExit>
									
									<OnClicked>
										ZO_Tooltips_HideTextTooltip()
										local owningWindow = self:GetOwningWindow()
										if owningWindow.object then
											owningWindow.object:ResetFilters(owningWindow)
										end
									</OnClicked>
								</Button>
								
								<Backdrop name="$(parent)Filter" hidden="false" tier="HIGH" inherits="ZO_SingleLineEditBackdrop_Keyboard">
									<OnInitialized>
										-- Add the filter contrls to the dropdown control.
										local owningWindow = self:GetOwningWindow()
										owningWindow.filter = self
										owningWindow.filterBox = self:GetNamedChild('Box')
										
										owningWindow.filterBox.m_dropdownObject = owningWindow.object
									</OnInitialized>
					
									<Anchor point="LEFT" relativeTo="$(parent)Reset" relativePoint="RIGHT" offsetX="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
									<Anchor point="RIGHT" relativeTo="$(parent)" relativePoint="RIGHT" offsetX="-25"/>
									
									<Controls>
										<EditBox name="$(parent)Box" verticalAlignment="CENTER" inherits="ZO_DefaultEditForBackdrop" defaultText="SI_SEARCH_FILTER_BY">
											<OnTextChanged>
												ZO_Tooltips_HideTextTooltip()
												local owningWindow = self:GetOwningWindow()
												if owningWindow.object then
													owningWindow.object:SetFilterString(self)
												end
											</OnTextChanged>

											<OnMouseEnter>
												ZO_Tooltips_ShowTextTooltip(self, BOTTOM, GetString(SI_LSM_SEARCH_FILTER_TOOLTIP))
												InformationTooltipTopLevel:BringWindowToTop()
											</OnMouseEnter>

											<OnMouseExit>
												ZO_Tooltips_HideTextTooltip()
											</OnMouseExit>
										</EditBox>
									</Controls>
								</Backdrop>

								<!--
								<Button name="$(parent)Settings" inherits="ZO_ButtonBehaviorClickSound">
									<Dimensions x="32" y="32" />
									<Anchor point="RIGHT" relativeTo="$(parent)" relativePoint="RIGHT" offsetX="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="0" />

									<Textures normal="esoui/art/chatwindow/chat_options_up.dds"
									  pressed="esoui/art/chatwindow/chat_options_down.dds"
									  mouseOver="esoui/art/chatwindow/chat_options_over.dds"/>

									<OnMouseEnter>
										ZO_Tooltips_ShowTextTooltip(self, BOTTOM, GetString(SI_GAME_MENU_SETTINGS))
										InformationTooltipTopLevel:BringWindowToTop()
									</OnMouseEnter>

									<OnMouseExit>
										ZO_Tooltips_HideTextTooltip()
									</OnMouseExit>

									<OnClicked>
										ZO_Tooltips_HideTextTooltip()
										local owningWindow = self:GetOwningWindow()
										if owningWindow.object then
											owningWindow.object:ShowFilterSettings(owningWindow, self)
										end
									</OnClicked>
								</Button>
								-->

								<!--Button name="$(parent)Include" inherits="ZO_DefaultTextButton" text="S">
									<Dimensions x="32" y="32" />
									<Anchor point="LEFT" relativeTo="$(parent)Filter" relativePoint="RIGHT" offsetX="-8" offsetY="0" />

									<OnInitialized>
										self.uncheckedText = 'S'
										self.checkedText = 'l'

										self.toggleFunction = function(button, checked)
											local owningWindow = self:GetOwningWindow()
											if owningWindow.object then
												owningWindow.object:SetFilterIgnore(checked)
											end
										end

									</OnInitialized>

									<OnClicked>
										ZO_CheckButton_OnClicked(self, button)

										- Show updated tooltip on click
										ClearTooltip(InformationTooltip)
										InitializeTooltip(InformationTooltip, self, BOTTOM, 0, 0)
										SetTooltipText(InformationTooltip, GetString('LIBSCROLLABLEMENU_SI_MATCHTOOLTIP', self:GetState()))
										InformationTooltipTopLevel:BringWindowToTop()

										- Can't remember what one is 0 and 1
										- LIBSCROLLABLEMENU_SI_MATCHTOOLTIP0 = 'Strict'
										- LIBSCROLLABLEMENU_SI_MATCHTOOLTIP1 = 'Loose'
									</OnClicked>

									<OnEffectivelyShown>
										local bState = self:GetState()
										local checked = bState == BSTATE_PRESSED
										- get saved button state
										ZO_CheckButton_SetCheckState(self, checked)
									</OnEffectivelyShown>

									<OnMouseEnter>
										InitializeTooltip(InformationTooltip, self, BOTTOM, 0, 0)
										SetTooltipText(InformationTooltip, GetString('LIBSCROLLABLEMENU_SI_MATCHTOOLTIP', self:GetState()))
										InformationTooltipTopLevel:BringWindowToTop()
									</OnMouseEnter>

									<OnMouseExit>
										ClearTooltip(InformationTooltip)
									</OnMouseExit>
								</Button-->
							</Controls>
						</Control>
						
						<Control name="$(parent)CustomControl" resizeToFitDescendents="false" hidden="true">
							<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="0" offsetY="0" />
							<Anchor point="TOPRIGHT" relativeTo="$(parent)" relativePoint="TOPRIGHT" offsetX="0" offsetY="0"/>
						</Control>
					</Controls>
				</Control>
				
				<Control name="$(parent)Scroll" override="true">
					<Anchor point="TOPLEFT" relativeTo="$(parent)Header" relativePoint="BOTTOMLEFT" offsetX="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
					<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT" offsetX="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
				</Control>
			</Controls>
		</TopLevelControl>
		
		<!-- ZO_ComboBox -->
		<Control name="LibScrollableMenu_ComboBox_Behavior" virtual="true">
			<OnMouseEnter name="Narrate">
				if self.m_comboBox then
					self.m_comboBox.m_dropdownObject:Narrate("OnComboBoxMouseEnter", self, nil, nil)
				end
			</OnMouseEnter>
			
			<OnMouseExit name="Narrate">
				if self.m_comboBox then
					self.m_comboBox.m_dropdownObject:Narrate("OnComboBoxMouseExit", self, nil, nil)
				end
			</OnMouseExit>
		</Control>

		<!-- Scrollbar padding -->
		<!-- used when scrollbar is hidden -->
		<Control name="LibScrollableMenu_ScrollContents_BarHidden" virtual="true">
			<Anchor point="TOPLEFT" />
			<Anchor point="BOTTOMRIGHT" offsetX="-3"/>
		</Control>
		<!-- used when scrollbar is shown -->
		<Control name="LibScrollableMenu_ScrollContents_BarShown" virtual="true">
			<Anchor point="TOPLEFT" />
			<Anchor point="BOTTOMRIGHT" offsetX="-ZO_SCROLL_BAR_WIDTH" />
		</Control>
	</Controls>
</GuiXml>
