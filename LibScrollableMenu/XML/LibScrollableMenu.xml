<GuiXml>
	<Controls>
		<!-- Munge template -->
			<!--Controls>
				<Texture name="$(parent)MungeOverlay" textureFile="EsoUI/Art/Tooltips/munge_overlay.dds" layer="CONTROLS" level="1" addressMode="WRAP" hidden="false">
					<Anchor point="TOPLEFT" offsetY="1" />
					<Anchor point="BOTTOMRIGHT" offsetY="-2" />
				</Texture>
			</Controls-->
			
		<!-- Highlight for ZO_SortFilterList entries where a submenu got a callback function - Light green
			Normal highlight is ZO_SelectionHighlight  -light blue -->
		<Backdrop name="LibScrollableMenu_Highlight_Green" inherits="ZO_SelectionHighlight" virtual="true" blendMode="ADD" centerColor="00ff00" edgeColor="00ff00"/>
		<Backdrop name="LibScrollableMenu_Highlight_Red" inherits="ZO_SelectionHighlight" virtual="true" blendMode="ADD" centerColor="ff0000" edgeColor="ff0000"/>
		<Backdrop name="LibScrollableMenu_Highlight_Blue" inherits="ZO_SelectionHighlight" virtual="true" blendMode="ADD" centerColor="0000ff" edgeColor="0000ff"/>
		<Backdrop name="LibScrollableMenu_Highlight_Opaque" inherits="ZO_SelectionHighlight" virtual="true" blendMode="ADD" centerColor="0F0F0F" edgeColor="0F0F0F"/>

		<!-- Divider | no icon no handlers -->
		<Texture name="LibScrollableMenu_ComboBoxDividerEntry" inherits="ZO_BaseTooltipDivider" virtual="true">
			<Dimensions y="6" />
			<Anchor point="LEFT" offsetX="-0" offsetY="-2.5" />
			<Anchor point="RIGHT" offsetX="0" offsetY="2.5" />
		</Texture>

		<!--Control name="LibScrollableMenu_ComboBoxDividerEntry" virtual="true">
			<Dimensions y="6" />
			<Controls>
				<Texture name="$(parent)Divider" hidden="false" inherits="ZO_BaseTooltipDivider">
					<Anchor point="LEFT" offsetX="-0" offsetY="-2.5" />
					<Anchor point="RIGHT" offsetX="0" offsetY="2.5" />
				</Texture>
			</Controls>
		</Control-->

		<!-- EditBox virtual templte -->
		<Backdrop name="LibScrollableMenu_EditBackdrop" virtual="true">
            <Dimensions y="ZO_COMBO_BOX_ENTRY_TEMPLATE_HEIGHT"/>
            <Edge file="EsoUI/Art/ChatWindow/textEntry_edge.dds" edgeFileWidth="64" edgeFileHeight="8" />
            <Center file="EsoUI/Art/ChatWindow/textEntry_center.dds" />
            <Insets left="8" top="8" right="-8" bottom="-8" />
        </Backdrop>

        <Backdrop name="LibScrollableMenu_SingleLineEditBackdrop_Keyboard" inherits="LibScrollableMenu_EditBackdrop" virtual="true">
            <OnInitialized>
                ZO_SingleLineEditContainerSize_Keyboard_OnInitialized(self)
            </OnInitialized>
        </Backdrop>
		<EditBox name="LibScrollableMenu_EditForBackdrop" inherits="ZO_DefaultEdit" font="ZoFontChat" virtual="true">
            <Anchor point="TOPLEFT" offsetX="ZO_SINGLE_LINE_EDIT_CONTAINER_PADDING_LEFT" offsetY="ZO_SINGLE_LINE_EDIT_CONTAINER_PADDING_TOP"/>
            <Anchor point="BOTTOMRIGHT" offsetX="-ZO_SINGLE_LINE_EDIT_CONTAINER_PADDING_RIGHT" offsetY="-ZO_SINGLE_LINE_EDIT_CONTAINER_PADDING_BOTTOM"/>
        </EditBox>

		<!-- Slider virtual templte -->
		<Slider name="LibScrollableMenu_Slider" mouseEnabled="true" orientation="HORIZONTAL" virtual="true">
            <Dimensions x="150" y="16" />
            <ThumbTexture
                textureFile="EsoUI/Art/Miscellaneous/scrollbox_elevator.dds"
                disabledTextureFile="EsoUI/Art/Miscellaneous/scrollbox_elevator_disabled.dds"
                thumbWidth="8"
                thumbHeight="16"
            />

            <Controls>
                <Backdrop name="$(parent)Backdrop" inherits="ZO_SliderBackdrop" />
            </Controls>
        </Slider>


		<!-- Base row templates -->
		<Control name="LibScrollableMenu_IconEntry_Template" virtual="true">
			<Anchor point="LEFT" offsetX="8" offsetY="0" />
			<Dimensions y="6" />
			<Controls>
				<Control name="$(parent)IconContainer">
					<Dimensions x="25"  y="25"/>
					<Anchor point="TOPLEFT" offsetX="0" offsetY="0"/>
					<Anchor point="BOTTOMLEFT" offsetY="0" />
					<Controls>
						<Texture name="$(parent)Icon" inherits="ZO_MultiIcon">
							<!--Dimensions x="25"  y="25"/>
							<Anchor point="CENTER"/-->
							
							<Anchor point="TOPLEFT"/>
							<Anchor point="BOTTOMRIGHT"/>
							
							<OnMouseEnter name="ZO_PropagateMouseOverBehavior">
								ZO_PropagateHandlerToNearestAncestor("OnMouseEnter", ...)
							</OnMouseEnter>

							<OnMouseExit name="ZO_PropagateMouseOverBehavior">
								ZO_PropagateHandlerToNearestAncestor("OnMouseExit", ...)
							</OnMouseExit>
						</Texture>
					</Controls>
				</Control>
			</Controls>
		</Control>

		<Control name="LibScrollableMenu_ComboBoxEntry_Behavior" level="3" mouseEnabled="true" virtual="true">
			<OnMouseEnter> <!-- name="BaseHandler"-->
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnMouseEnterEntry(self)
				end
			</OnMouseEnter>
			
			<OnMouseExit>
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnMouseExitEntry(self)
				end
			</OnMouseExit>
			
			<OnMouseUp>
--d("LibScrollableMenu_ComboBoxEntry_Behavior - OnMouseUp: " ..tostring(self.GetName and self:GetName()))
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnEntryMouseUp(self, button, upInside, false, ctrl, alt, shift)
				end
			</OnMouseUp>
		</Control>

		<Control name="LibScrollableMenu_ComboBoxEditBoxEntry_Behavior" level="3" mouseEnabled="true" virtual="true">
			<OnMouseEnter> <!-- name="BaseHandler"-->
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnMouseEnterEntry(self)
				end
			</OnMouseEnter>

			<OnMouseExit>
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnMouseExitEntry(self)
				end
			</OnMouseExit>

			<OnMouseUp>
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnEntryMouseUp(self, button, upInside, false, ctrl, alt, shift, LSM_ENTRY_TYPE_EDITBOX)
				end
			</OnMouseUp>
		</Control>

		<Control name="LibScrollableMenu_ComboBoxSliderEntry_Behavior" level="3" mouseEnabled="true" virtual="true">
			<OnMouseEnter> <!-- name="BaseHandler"-->
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnMouseEnterEntry(self)
				end
			</OnMouseEnter>

			<OnMouseExit>
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnMouseExitEntry(self)
				end
			</OnMouseExit>

			<OnMouseUp>
				local dropdown = self.m_dropdownObject
				if dropdown then
					dropdown:OnEntryMouseUp(self, button, upInside, false, ctrl, alt, shift, LSM_ENTRY_TYPE_SLIDER)
				end
			</OnMouseUp>
		</Control>

		<!-- Row templates -->

		<!-- Header | no handlers-->
		<Control name="LibScrollableMenu_ComboBoxHeaderEntry" inherits="LibScrollableMenu_IconEntry_Template" mouseEnabled="true" virtual="true">
			<Dimensions y="25" />
			<OnInitialized>
				self.isHeader = true
			</OnInitialized>

			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" font="ZoFontWinH5" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_CONTEXT_HIGHLIGHT" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="0" />
					<Anchor point="BOTTOMRIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" offsetY="-5"  />
				</Label>
				<!-- ZoFontWinH5 inherits="ZO_HorizontalDivider" inherits="ZO_WideHorizontalDivider" offsetY="4" -->
				<Texture name="$(parent)Divider" inherits="ZO_Options_Divider">
					<Anchor point="BOTTOMLEFT" offsetX="3" offsetY="-5"/>
					<Anchor point="BOTTOMRIGHT" offsetX="0" offsetY="0" />
				</Texture>
			</Controls>
		</Control>

		<!-- Normal entry -->
		<Control name="LibScrollableMenu_ComboBoxEntry" inherits="LibScrollableMenu_IconEntry_Template LibScrollableMenu_ComboBoxEntry_Behavior" mouseEnabled="true" virtual="true">
			<Dimensions y="ZO_COMBO_BOX_ENTRY_TEMPLATE_HEIGHT" />
			<OnInitialized>
				<!-- Is this still needed? -->
				self.selectable = true <!-- Denotes this is a selectable entry.   -->
			</OnInitialized>

			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="1" />
					<Anchor point="RIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" />
				</Label>
			</Controls>
		</Control>

		<!-- Button without clickSound="Click" in XML-->
		<Button name="LibScrollableMenu_DefaultTextButton" font="ZoFontGame" verticalAlignment="CENTER" virtual="true">
            <Dimensions x="128" y="26" />
            <PressedOffset x="1" y="1" />

            <FontColors
                normalColor="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_NORMAL"
                pressedColor="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED"
                mouseOverColor="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_HIGHLIGHT"
                disabledColor="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_DISABLED"
            />
        </Button>


		<!-- Checkbox -->
		<Control name="LibScrollableMenu_ComboBoxCheckboxEntry" inherits="LibScrollableMenu_ComboBoxEntry" mouseEnabled="true" virtual="true">
			<Dimensions y="25" />

			<OnInitialized>
				self.Checkbox = self:GetNamedChild('Checkbox')
				self.isCheckbox = true
			</OnInitialized>

			<Controls>
				<Button name="$(parent)Checkbox" inherits="ZO_CheckButton" level="3">
					<OnInitialized>
						<!-- We propogate the row OnMouseUp to the button's OnClicked so clicking the row simulates clicking the button -->
						LibScrollableMenu.XML.XMLButtonOnInitialize(self, LSM_ENTRY_TYPE_CHECKBOX)
					</OnInitialized>

					<OnMouseEnter name="ZO_PropagateMouseOverBehavior">
						ZO_PropagateHandlerToNearestAncestor("OnMouseEnter", ...)
					</OnMouseEnter>

					<OnMouseExit name="ZO_PropagateMouseOverBehavior">
						ZO_PropagateHandlerToNearestAncestor("OnMouseExit", ...)
					</OnMouseExit>

					<!-- Centered on the icon -->
					<Anchor point="LEFT" relativeTo="$(parent)IconContainer" relativePoint="RIGHT" offsetX="1"/>
				</Button>

				<Label name="$(parent)Label" override="true" verticalAlignment="CENTER" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="LEFT" relativeTo="$(parent)Checkbox" relativePoint="RIGHT" offsetX="4"/>
					<Anchor point="RIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" />
				</Label>
			</Controls>
		</Control>

		<!-- RadioButton -->
		<Control name="LibScrollableMenu_ComboBoxRadioButtonEntry" inherits="LibScrollableMenu_ComboBoxEntry" mouseEnabled="true" virtual="true">
			<Dimensions y="25" />

			<OnInitialized>
				self.RadioButton = self:GetNamedChild('RadioButton')
				self.isRadioButton = true
			</OnInitialized>

			<Controls>
				<Button name="$(parent)RadioButton" inherits="ZO_RadioButton" level="3">
					<OnInitialized>
						<!-- We propogate the row OnMouseUp to the button's OnClicked so clicking the row simulates clicking the button -->
						LibScrollableMenu.XML.XMLButtonOnInitialize(self, LSM_ENTRY_TYPE_RADIOBUTTON)
					</OnInitialized>

					<OnMouseEnter name="ZO_PropagateMouseOverBehavior">
						ZO_PropagateHandlerToNearestAncestor("OnMouseEnter", ...)
					</OnMouseEnter>

					<OnMouseExit name="ZO_PropagateMouseOverBehavior">
						ZO_PropagateHandlerToNearestAncestor("OnMouseExit", ...)
					</OnMouseExit>
					<!-- Centered on the icon -->
					<Anchor point="LEFT" relativeTo="$(parent)IconContainer" relativePoint="RIGHT" offsetX="1"/>
				</Button>

				<Label name="$(parent)Label" override="true" verticalAlignment="CENTER" wrapMode="ELLIPSIS" maxLineCount="1">

					<Anchor point="LEFT" relativeTo="$(parent)RadioButton" relativePoint="RIGHT" offsetX="4"/>
					<Anchor point="RIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" />
				</Label>
			</Controls>
		</Control>

		<!-- Submenu -->
		<Control name="LibScrollableMenu_ComboBoxSubmenuEntry" inherits="LibScrollableMenu_ComboBoxEntry" mouseEnabled="true" virtual="true">
			<OnInitialized>
				<!-- Is this still needed? -->
				self.selectable = true <!-- Denotes this is a selectable entry.   -->
			</OnInitialized>
			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" override="true" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="1" />
					<Anchor point="RIGHT" offsetX="-25" />
				</Label>
				<Texture name="$(parent)Arrow" textureFile="EsoUI/Art/Miscellaneous/colorPicker_slider_vertical.dds">
					<TextureCoords left="0" right="0.5" top="0" bottom="1"/>
					<Dimensions x="16"  y="20"/>
					<Anchor point="LEFT" relativeTo="$(parent)Label" relativePoint="RIGHT" offsetY="1"/>
				</Texture>
			</Controls>
		</Control>

		<!-- Button entry -->
		<Button name="LibScrollableMenu_ComboBoxButtonEntry" inherits="LibScrollableMenu_ComboBoxEntry LibScrollableMenu_DefaultTextButton" mouseEnabled="true" virtual="true">
			<Dimensions y="ZO_COMBO_BOX_ENTRY_TEMPLATE_HEIGHT" />
			<OnInitialized>
				self.isButton = true
			</OnInitialized>

			<Controls>
				<Label name="$(parent)Label" override="true" horizontalAlignment="CENTER" verticalAlignment="CENTER" wrapMode="ELLIPSIS" maxLineCount="1">
					<Dimensions x="128" y="28" />
					<Anchor point="TOPLEFT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" />
					<Anchor point="BOTTOMRIGHT" offsetX="-ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" />
				</Label>
			</Controls>
		</Button>


		<!-- EditBox entry -->
		<Control name="LibScrollableMenu_ComboBoxEditBoxEntry" inherits="LibScrollableMenu_IconEntry_Template LibScrollableMenu_ComboBoxEditBoxEntry_Behavior" mouseEnabled="true" virtual="true">
			<Dimensions y="ZO_COMBO_BOX_ENTRY_TEMPLATE_HEIGHT" />
			<OnInitialized>
				self.isEditBox = true
			</OnInitialized>

			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" wrapMode="ELLIPSIS" maxLineCount="1">
					<DimensionConstraints x="5" maxX="75%" />
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="1" />
				</Label>
				<Backdrop name="$(parent)Edit" hidden="false" tier="HIGH" inherits="LibScrollableMenu_SingleLineEditBackdrop_Keyboard">
					<OnInitialized>
						self:GetParent().EditBox = self:GetNamedChild('Box')
					</OnInitialized>
					<Anchor point="TOPLEFT" relativeTo="$(parent)Label" relativePoint="TOPRIGHT" offsetX="4"/>
					<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT" offsetX="-2"/>

					<Controls>
						<EditBox name="$(parent)Box" excludeFromResizeToFitExtents="true" inherits="LibScrollableMenu_EditForBackdrop" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_NORMAL" defaultText="">
							<OnTextChanged>
								LibScrollableMenu.XML.OnXMLControlEventHandler("OnEditBoxTextChanged", self, self)
							</OnTextChanged>
						</EditBox>
					</Controls>
				</Backdrop>
			</Controls>
		</Control>


		<!-- Slider entry -->
		<Control name="LibScrollableMenu_ComboBoxSliderEntry" inherits="LibScrollableMenu_IconEntry_Template LibScrollableMenu_ComboBoxSliderEntry_Behavior" mouseEnabled="true" virtual="true">
			<Dimensions y="ZO_COMBO_BOX_ENTRY_TEMPLATE_HEIGHT" />
			<OnInitialized>
				self.isSlider = true
			</OnInitialized>

			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" wrapMode="ELLIPSIS" maxLineCount="1">
					<DimensionConstraints x="5" maxX="90%" />
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="1" />
				</Label>
				<Control name="$(parent)SliderContainer">
					<DimensionConstraints x="100%" maxX="100%" />
					<Anchor point="TOPLEFT" relativeTo="$(parent)Label" relativePoint="TOPRIGHT" offsetX="4"/>
					<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT" offsetX="-2"/>
					<Controls>
						<Slider name="$(parent)Slider" hidden="false" tier="HIGH" inherits="LibScrollableMenu_Slider">
							<OnInitialized>
								self:GetParent():GetParent().Slider = self
							</OnInitialized>
							<OnValueChanged>
								LibScrollableMenu.XML.OnXMLControlEventHandler("OnSliderValueChanged", self, self)
							</OnValueChanged>
							<Anchor point="TOPLEFT" relativeTo="$(parent)SliderContainer" relativePoint="TOPLEFT" />
						</Slider>
						<Label name="$(parent)SliderValueLabel" font="ZoFontWinH5" verticalAlignment="CENTER" wrapMode="ELLIPSIS" maxLineCount="1">
							<Anchor point="TOPLEFT" relativeTo="$(parent)Slider" relativePoint="TOPRIGHT"/>
							<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)SliderContainer" relativePoint="BOTTOMRIGHT" offsetX="-2"/>
						</Label>
					</Controls>
				</Control>
			</Controls>
		</Control>

		<!-- The genuine Dropdown control. The scroll list container.
			TLC so it can be forced above other dropdowns without having to consider layering
			Since some UI panels have layering set, we set it as overlay high, so it will be above those
			We give Scroll an offsetX to allow detection of on enter/exit. Otherwise, that detection is only done per rows
		-->
		<!-- The template used for initializing all dropdowns -->
		<TopLevelControl name="LibScrollableMenu_Dropdown_Behavior" virtual="true">
			<OnEffectivelyHidden name="HideDropDown" >
				<!-- Handler set normally in ZO_ComboBox:Initialize -->
				local dropdownObject = self.object
				if dropdownObject then
					dropdownObject:XMLHandler(self, "OnEffectivelyHidden")
				end
			</OnEffectivelyHidden>
	
			<OnMouseEnter name="CloseCheck">
				-- Do we need to close any submenus on dropdown enter?
				local dropdownObject = self.object
				if dropdownObject then
					dropdownObject:XMLHandler(self, "OnMouseEnter")
				end
			</OnMouseEnter>
			
			<OnShow name="Narrate">
				local dropdownObject = self.object
				if dropdownObject then
					dropdownObject:XMLHandler(self, "OnShow") --calls dropdownObject:GetFormattedNarrateEvent
				end
			</OnShow>
			
			<OnHide name="Narrate">
				local dropdownObject = self.object
				if dropdownObject then
					dropdownObject:XMLHandler(self, "OnHide") --calls dropdownObject:GetFormattedNarrateEvent
				end
			</OnHide>
		</TopLevelControl>
		
		<TopLevelControl name="LibScrollableMenu_Dropdown_Template" inherits="ZO_ComboBoxDropdown_Keyboard_Template LibScrollableMenu_Dropdown_Behavior" virtual="true">
			<OnInitialized>
				-- Overwritten to prevent original OnInitialized
			</OnInitialized>
			<Controls>
				<Control name="$(parent)Scroll" override="true">
					<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
					<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT" offsetX="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
				</Control>
			</Controls>
		</TopLevelControl>
		
		<TopLevelControl name="LibScrollableMenu_Dropdown_Template_WithHeader" inherits="LibScrollableMenu_Dropdown_Behavior" virtual="true">
			<OnInitialized>
			</OnInitialized>
			<Controls>
				<Control name="$(parent)Header" resizeToFitDescendents="false" hidden="true">
					<OnInitialized>
						local title = self:GetNamedChild("Title")
						local subTitle = self:GetNamedChild("SubTitle")
						local filterContainer = self:GetNamedChild("FilterContainer")
						local headerControls = LibScrollableMenu.XML.headerControls
						self.controls = {
							[headerControls.PARENT] 			= self,
							[headerControls.TITLE] 				= title,
							[headerControls.SUBTITLE] 			= subTitle,
							[headerControls.CENTER_BASELINE] 	= self:GetNamedChild("CenterAnchor"),
							[headerControls.DIVIDER_SIMPLE] 	= self:GetNamedChild("DividerSimple"),
							[headerControls.FILTER_CONTAINER] 	= filterContainer,
							[headerControls.CUSTOM_CONTROL] 	= self:GetNamedChild("CustomControl"),
							[headerControls.TOGGLE_BUTTON] 		= self:GetNamedChild("ToggleHeader"),
							[headerControls.TOGGLE_BUTTON_CLICK_EXTENSION] 		= self:GetNamedChild("ToggleHeaderClickExtension"),
						}
						self:GetParent().header = self

						ZO_SharedGamepadEntry_SetHeightFromLabelOnly({label = title})
						ZO_SharedGamepadEntry_SetHeightFromLabelOnly({label = subTitle})
					</OnInitialized>
					
					<!-- These anchors set it to span from left to right -->
					<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT"/>
					<Anchor point="TOPRIGHT" relativeTo="$(parent)" relativePoint="TOPRIGHT"/>
					<!--
					<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT"/>
					<Anchor point="TOPRIGHT
					-->

					<Controls>
						<!-- Provides an area that clearly shows the border of the header -->
						<Control name="$(parent)BG" excludeFromResizeToFitExtents="true" >
							<AnchorFill />
							<Controls>
								<Texture name="$(parent)MungeOverlay" textureFile="EsoUI/Art/Tooltips/munge_overlay.dds" addressMode="WRAP">
									<AnchorFill />
								</Texture>
								
								<Texture name="$(parent)Divider" inherits="ZO_Options_Divider" alpha="0.8">
									<TextureCoords left="0" right=".625" top="0" bottom=".625" />
									<Anchor point="BOTTOMLEFT" offsetY="0"/>
									<Anchor point="BOTTOMRIGHT"  offsetX="-5" offsetY="2" />
								</Texture>
							</Controls>
						</Control>

						<!-- Used to anchor the first control to the header -->
						<Control name="$(parent)CenterAnchor" excludeFromResizeToFitExtents="true" hidden="true">
							<Dimensions y="5" />
							<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="25" offsetY="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" />
							<Anchor point="TOPRIGHT" relativeTo="$(parent)" relativePoint="TOPRIGHT" offsetX="-25" offsetY="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
						</Control>

						<!--Label name="$(parent)Title" inherits="ZO_GamepadScreenHeaderTitleTextTemplate" excludeFromResizeToFitExtents="true" -->
						<Label name="$(parent)Title" hidden="true"/>
						<!--Label name="$(parent)SubTitle" inherits="ZO_GamepadHeaderLabelTextTemplate" horizontalAlignment="CENTER" excludeFromResizeToFitExtents="true" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED" hidden="true"-->
						<Label name="$(parent)SubTitle" horizontalAlignment="CENTER" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED" hidden="true"/>

						<Control name="$(parent)DividerSimple" hidden="true">
							<Dimensions y="16" />
							<Controls>
								<Texture name="$(parent)Divider" hidden="false" inherits="LibScrollableMenu_ComboBoxDividerEntry">
									<Dimensions y="6" />
									<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="0" offsetY="0"/>
									<Anchor point="TOPRIGHT" relativeTo="$(parent)" relativePoint="TOPRIGHT" offsetX="0" offsetY="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" />
								</Texture>
							</Controls>
						</Control>

						<Control name="$(parent)FilterContainer" hidden="true">
							<Dimensions y="37"/>
							<Controls>
								<Button name="$(parent)Reset" excludeFromResizeToFitExtents="true" inherits="ZO_ButtonBehaviorClickSound">
									<Dimensions x="32" y="32" />
									<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="-5" offsetY="0" />

									<Textures
										normal="EsoUI/Art/Help/help_tabIcon_feedback_up.dds"
										pressed="EsoUI/Art/Help/help_tabIcon_feedback_down.dds"
										mouseOver="EsoUI/Art/Help/help_tabIcon_feedback_over.dds"
									/>

									<OnMouseEnter>
										LibScrollableMenu.XML.OnXMLControlEventHandler("ShowTextTooltip", self, self, BOTTOM, GetString(SI_HOOK_POINT_STORE_RESET), nil)
									</OnMouseEnter>

									<OnMouseExit>
										ZO_Tooltips_HideTextTooltip()
									</OnMouseExit>
									
									<OnClicked>
										LibScrollableMenu.XML.OnXMLControlEventHandler("ResetFilters", self, self:GetOwningWindow())
									</OnClicked>
								</Button>
								
								<Backdrop name="$(parent)Filter" hidden="false" tier="HIGH" inherits="ZO_SingleLineEditBackdrop_Keyboard">
									<OnInitialized>
										-- Add the filter controls to the dropdown control.
										local owningWindow = self:GetOwningWindow()
										owningWindow.filter = self
										owningWindow.filterBox = self:GetNamedChild('Box')
										
										owningWindow.filterBox.m_dropdownObject = owningWindow.object
									</OnInitialized>
					
									<Dimensions y="32"/>
									<Anchor point="TOPLEFT" relativeTo="$(parent)Reset" relativePoint="TOPRIGHT" offsetX="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
									<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT" offsetX="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
									
									<Controls>
										<EditBox name="$(parent)Box" excludeFromResizeToFitExtents="true" inherits="ZO_DefaultEditForBackdrop" defaultText="SI_SEARCH_FILTER_BY">
											<OnTextChanged>
												ClearMenu()
												LibScrollableMenu.XML.OnXMLControlEventHandler("SetFilterString", self, self)
											</OnTextChanged>

											<OnMouseEnter>
												LibScrollableMenu.XML.OnXMLControlEventHandler("ShowTextTooltip", self, self, BOTTOM, GetString(SI_LSM_SEARCH_FILTER_TOOLTIP), nil)
											</OnMouseEnter>

											<OnMouseExit>
												ZO_Tooltips_HideTextTooltip()
											</OnMouseExit>

											<OnMouseUp>
												LibScrollableMenu.XML.OnXMLControlEventHandler("OnFilterEditBoxMouseUp", self, self, button, upInside, ctrl, alt, shift)
											</OnMouseUp>
										</EditBox>
									</Controls>
								</Backdrop>

								<!--
								<Button name="$(parent)Settings" inherits="ZO_ButtonBehaviorClickSound">
									<Dimensions x="32" y="32" />
									<Anchor point="RIGHT" relativeTo="$(parent)" relativePoint="RIGHT" offsetX="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="0" />

									<Textures normal="esoui/art/chatwindow/chat_options_up.dds"
									  pressed="esoui/art/chatwindow/chat_options_down.dds"
									  mouseOver="esoui/art/chatwindow/chat_options_over.dds"/>

									<OnMouseEnter>
										ZO_Tooltips_ShowTextTooltip(self, BOTTOM, GetString(SI_GAME_MENU_SETTINGS))
										InformationTooltipTopLevel:BringWindowToTop()
									</OnMouseEnter>

									<OnMouseExit>
										ZO_Tooltips_HideTextTooltip()
									</OnMouseExit>

									<OnClicked>
										ZO_Tooltips_HideTextTooltip()
										local owningWindow = self:GetOwningWindow()
										if owningWindow.object then
											owningWindow.object:ShowFilterSettings(owningWindow, self)
										end
									</OnClicked>
								</Button>
								-->

								<!--Button name="$(parent)Include" inherits="ZO_DefaultTextButton" text="S">
									<Dimensions x="32" y="32" />
									<Anchor point="LEFT" relativeTo="$(parent)Filter" relativePoint="RIGHT" offsetX="-8" offsetY="0" />

									<OnInitialized>
										self.uncheckedText = 'S'
										self.checkedText = 'l'

										self.toggleFunction = function(button, checked)
											local owningWindow = self:GetOwningWindow()
											if owningWindow.object then
												owningWindow.object:SetFilterIgnore(checked)
											end
										end

									</OnInitialized>

									<OnClicked>
										ZO_CheckButton_OnClicked(self, button)

										- Show updated tooltip on click
										ClearTooltip(InformationTooltip)
										InitializeTooltip(InformationTooltip, self, BOTTOM, 0, 0)
										SetTooltipText(InformationTooltip, GetString('LIBSCROLLABLEMENU_SI_MATCHTOOLTIP', self:GetState()))
										InformationTooltipTopLevel:BringWindowToTop()

										- Can't remember what one is 0 and 1
										- LIBSCROLLABLEMENU_SI_MATCHTOOLTIP0 = 'Strict'
										- LIBSCROLLABLEMENU_SI_MATCHTOOLTIP1 = 'Loose'
									</OnClicked>

									<OnEffectivelyShown>
										local bState = self:GetState()
										local checked = bState == BSTATE_PRESSED
										- get saved button state
										ZO_CheckButton_SetCheckState(self, checked)
									</OnEffectivelyShown>

									<OnMouseEnter>
										InitializeTooltip(InformationTooltip, self, BOTTOM, 0, 0)
										SetTooltipText(InformationTooltip, GetString('LIBSCROLLABLEMENU_SI_MATCHTOOLTIP', self:GetState()))
										InformationTooltipTopLevel:BringWindowToTop()
									</OnMouseEnter>

									<OnMouseExit>
										ClearTooltip(InformationTooltip)
									</OnMouseExit>
								</Button-->

							</Controls>
						</Control>

						<Control name="$(parent)CustomControl" resizeToFitDescendents="false" hidden="true">
							<!--
							Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" offsetX="0" offsetY="0" />
							<Anchor point="TOPRIGHT" relativeTo="$(parent)" relativePoint="TOPRIGHT" offsetX="0" offsetY="0"/>
							-->
						</Control>

						<Button name="$(parent)ToggleHeader" inherits="ZO_ButtonBehaviorClickSound" hidden="true">
							<DimensionConstraints minY="24" maxY="24" minX="24" />

							<OnInitialized>
								local owningWindow = self:GetOwningWindow()
								owningWindow.toggleButton = self
								self.toggleFunction = function(button, checked)
									if owningWindow.object and owningWindow.object.m_comboBox then
										owningWindow.object.m_comboBox:UpdateDropdownHeader(self)
									end
								end
								
								self.GetTooltipText = function()
									local currentState = self:GetState()
									if currentState == BSTATE_PRESSED then
										return GetString(SI_ITEM_SETS_BOOK_HEADER_EXPAND) -- "Expand"
									elseif currentState == BSTATE_NORMAL then
										return GetString(SI_ITEM_SETS_BOOK_HEADER_COLLAPSE) -- "Collapse"
									end
									return ''
								end
							</OnInitialized>

							<Textures
								normal="EsoUI/Art/Buttons/large_uparrow_up.dds"
								mouseOver="EsoUI/Art/Buttons/large_uparrow_over.dds"
								disabled="EsoUI/Art/Buttons/large_uparrow_disabled.dds"

								pressed="EsoUI/Art/Buttons/large_downarrow_up.dds"
								pressedMouseOver="EsoUI/Art/Buttons/large_downarrow_over.dds"
								disabledPressed="EsoUI/Art/Buttons/large_downarrow_disabled.dds"
							/>

							<OnMouseEnter>
								LibScrollableMenu.XML.OnXMLControlEventHandler("ShowTextTooltip", self, self, BOTTOM, self:GetTooltipText(), nil)
							</OnMouseEnter>

							<OnMouseExit>
								ZO_Tooltips_HideTextTooltip()
							</OnMouseExit>

							<OnClicked>
								ZO_Tooltips_HideTextTooltip()
								ZO_CheckButton_OnClicked(self)
							</OnClicked>
						</Button>

						<Button name="$(parent)ToggleHeaderClickExtension" inherits="ZO_ButtonBehaviorClickSound" hidden="true">
							<DimensionConstraints minY="0" maxY="24" minX="0" />

							<OnInitialized>
								local owningWindow = self:GetOwningWindow()
								owningWindow.toggleButtonClickExtension = self
							</OnInitialized>

							<OnMouseEnter>
								local owningWindow = self:GetOwningWindow()
								if owningWindow then
									LibScrollableMenu.XML.OnXMLControlEventHandler("ShowTextTooltip", self, self, BOTTOM, owningWindow.toggleButton and owningWindow.toggleButton:GetTooltipText(), owningWindow)
								end
							</OnMouseEnter>

							<OnMouseExit>
								ZO_Tooltips_HideTextTooltip()
							</OnMouseExit>

							<OnClicked>
								ZO_Tooltips_HideTextTooltip()

								local owningWindow = self:GetOwningWindow()
								local toggleButton = owningWindow.toggleButton
								ZO_CheckButton_OnClicked(toggleButton)
							</OnClicked>
						</Button>
					</Controls>
				</Control>
				
				<Control name="$(parent)Scroll" override="true">
					<Anchor point="TOPLEFT" relativeTo="$(parent)Header" relativePoint="BOTTOMLEFT" offsetX="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
					<Anchor point="BOTTOMRIGHT" relativeTo="$(parent)" relativePoint="BOTTOMRIGHT" offsetX="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" offsetY="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y"/>
				</Control>
			</Controls>
		</TopLevelControl>
		
		<!-- ZO_ComboBox -->
		<Control name="LibScrollableMenu_ComboBox_Behavior" virtual="true">
			<OnMouseEnter name="Narrate">
				if self.m_comboBox then
					self.m_comboBox.m_dropdownObject:Narrate("OnComboBoxMouseEnter", self, nil, nil)
				end
			</OnMouseEnter>
			
			<OnMouseExit name="Narrate">
				if self.m_comboBox then
					self.m_comboBox.m_dropdownObject:Narrate("OnComboBoxMouseExit", self, nil, nil)
				end
			</OnMouseExit>
		</Control>

		<!-- Scrollbar padding -->
		<!-- used when scrollbar is hidden -->
		<Control name="LibScrollableMenu_ScrollContents_BarHidden" virtual="true">
			<Anchor point="TOPLEFT" />
			<Anchor point="BOTTOMRIGHT" offsetX="-3"/>
		</Control>
		<!-- used when scrollbar is shown -->
		<Control name="LibScrollableMenu_ScrollContents_BarShown" virtual="true">
			<Anchor point="TOPLEFT" />
			<Anchor point="BOTTOMRIGHT" offsetX="-ZO_SCROLL_BAR_WIDTH" />
		</Control>
	</Controls>
</GuiXml>
